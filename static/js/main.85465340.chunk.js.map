{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","timer","timerId","this","setInterval","date","Date","setState","toLocaleTimeString","console","log","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","randomNum","Math","floor","random","className","type","onClick","randomNumber","ReactDOM","render","document","getElementById"],"mappings":"sNAOMA,E,4MACJC,MAAQ,CACNC,MAAO,I,EAGTC,a,yDAEA,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAO,IAAIC,KAEjB,EAAKC,SAAS,CAAEN,MAAOI,EAAKG,uBAE5BC,QAAQC,IAAI,EAAKV,MAAMC,SACtB,O,gCAGL,SAAmBU,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAChCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DT,KAAKU,MAAMD,S,kCAI9E,WACMT,KAAKD,SACPY,cAAcX,KAAKD,W,oBAIvB,WACE,OAAO,mCAAGC,KAAKH,MAAMC,Y,GA9BLc,IAAMC,WAkCXjB,ICrCTkB,E,4MACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,kDAGb,WACE,IAAMC,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAElCpB,KAAKI,SAAS,CAAEY,UAAWC,M,oBAG7B,WAAU,IAAD,OACP,OACE,sBAAKI,UAAU,MAAf,UACE,6CACA,8CAEG,IACArB,KAAKH,MAAMkB,gBAAkB,cAAC,EAAD,CAAON,KAAMT,KAAKH,MAAMmB,YAEtD,gCACE,wBACEM,KAAK,SACLC,QAAS,WACP,EAAKnB,SAAS,CAAEW,gBAAgB,KAHpC,wBAQA,wBACEO,KAAK,SACLC,QAAS,WACP,EAAKnB,SAAS,CAAEW,gBAAgB,KAHpC,wBAQA,uBACA,wBACEO,KAAK,SACLC,QAAS,WACP,EAAKC,gBAHT,0C,GAvCMZ,IAAMC,WAsDTC,ICvDfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.85465340.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype Props = {\n  name: number\n};\n\nclass Clock extends React.Component<Props> {\n  state = {\n    timer: '',\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date = new Date();\n\n      this.setState({ timer: date.toLocaleTimeString() });\n\n      console.log(this.state.timer);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return <>{this.state.timer}</>;\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Clock/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  randomNumber() {\n    const randomNum = Math.floor(Math.random() * 10);\n\n    this.setState({ clockName: randomNum });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ isClockVisible: true });\n              }}\n            >\n              Show Clock\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ isClockVisible: false });\n              }}\n            >\n              Hide Clock\n            </button>\n            <br />\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.randomNumber();\n              }}\n            >\n              Set random name\n            </button>\n          </div>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}